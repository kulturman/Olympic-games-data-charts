{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n/**\n * Throttle a function\n *\n */\n\nconst _c0 = [\"caretElm\"];\n\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    model: a0\n  };\n};\n\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.context));\n  }\n}\n\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.title, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\n\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\n\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r1.legendOptions && ctx_r1.legendOptions.position === ctx_r1.LegendPosition.Below)(\"data\", ctx_r1.legendOptions.domain)(\"title\", ctx_r1.legendOptions.title)(\"colors\", ctx_r1.legendOptions.colors)(\"height\", ctx_r1.view[1])(\"width\", ctx_r1.legendWidth)(\"activeEntries\", ctx_r1.activeEntries);\n  }\n}\n\nconst _c2 = [\"*\"];\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\n\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.tickTransform(tick_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"text-anchor\", ctx_r1.textAnchor)(\"transform\", ctx_r1.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r3)), \" \");\n  }\n}\n\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r5.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", -ctx_r5.gridLineHeight);\n  }\n}\n\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.tickTransform(tick_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\n\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\n\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"rotateTicks\", ctx_r0.rotateTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.xScale)(\"orient\", ctx_r0.xOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineHeight\", ctx_r0.dims.height)(\"width\", ctx_r0.dims.width)(\"tickValues\", ctx_r0.ticks);\n  }\n}\n\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\n\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\n\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4)(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transform(tick_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r1.dy)(\"x\", ctx_r1.x1)(\"y\", ctx_r1.y1)(\"text-anchor\", ctx_r1.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r5)), \" \");\n  }\n}\n\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r8.gridLineWidth);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r9.gridLineWidth);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 8);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r7.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Right);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r6 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r3.transform(tick_r6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showGridLines);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.tickTrim(ctx_r12.tickFormat(refLine_r10.value)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"dy\", ctx_r12.dy)(\"y\", -6)(\"x\", ctx_r12.gridLineWidth)(\"text-anchor\", ctx_r12.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", refLine_r10.name, \" \");\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 10);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r11.transform(refLine_r10.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x2\", ctx_r11.gridLineWidth)(\"transform\", ctx_r11.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.showRefLabels);\n  }\n}\n\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRefLines);\n  }\n}\n\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\n\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickValues\", ctx_r0.ticks)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.yScale)(\"orient\", ctx_r0.yOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineWidth\", ctx_r0.dims.width)(\"referenceLines\", ctx_r0.referenceLines)(\"showRefLines\", ctx_r0.showRefLines)(\"showRefLabels\", ctx_r0.showRefLabels)(\"height\", ctx_r0.dims.height);\n  }\n}\n\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\n\nconst _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\n\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\n\nconst _c10 = [\"ngx-charts-circle\", \"\"];\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\n\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\n\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r2.circle.cx - ctx_r2.circle.radius)(\"y\", ctx_r2.circle.cy)(\"width\", ctx_r2.circle.radius * 2)(\"height\", ctx_r2.circle.height)(\"fill\", ctx_r2.gradientFill);\n  }\n}\n\nconst _c12 = function (a0) {\n  return {\n    name: a0\n  };\n};\n\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2);\n    i0.ɵɵtemplate(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClick(ctx_r3.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.circle.gradientStops);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r0.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r0.circle.cx)(\"cy\", ctx_r0.circle.cy)(\"r\", ctx_r0.circle.radius)(\"fill\", ctx_r0.circle.color)(\"pointerEvents\", ctx_r0.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r0.circle.value)(\"classNames\", ctx_r0.circle.classNames)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(ctx_r0.circle))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", ctx_r0.circle.data);\n  }\n}\n\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\n\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\n\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\n\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\n\nconst _c16 = [\"ngx-charts-area\", \"\"];\n\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\n\nfunction TooltipArea__svg_ng_template_2__xhtml_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tooltipItem_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getToolTipText(tooltipItem_r5), \" \");\n  }\n}\n\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2__xhtml_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const model_r3 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", model_r3);\n  }\n}\n\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\n\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\n\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.valueFormatting ? ctx_r1.valueFormatting(ctx_r1.roundedTotal) : ctx_r1.defaultValueFormatting(ctx_r1.roundedTotal), \" \");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r4.valueFormatting);\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.valueFormatting ? ctx_r5.valueFormatting(legendItem_r3.value) : ctx_r5.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\n\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11);\n    i0.ɵɵtemplate(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14);\n    i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n  }\n}\n\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\n\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"baseValue\", ctx_r2.baseValue)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r2.activeEntries)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\n\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"baseValue\", ctx_r19.baseValue)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return [a0, a1];\n};\n\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"activeEntries\", ctx_r2.activeEntries)(\"gradient\", ctx_r2.gradient)(\"normalized\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"normalized\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nconst _c25 = \".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\n\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"activeEntries\", ctx_r2.activeEntries)(\"stacked\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onClick($event, series_r11));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"stacked\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\n\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nconst _c26 = [\"ngx-charts-bar\", \"\"];\n\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\n\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bar_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.data)(\"orientation\", ctx_r0.barOrientation.Horizontal)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2.data))(\"ariaLabel\", bar_r2.ariaLabel)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"noBarWhenZero\", ctx_r0.noBarWhenZero);\n  }\n}\n\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r9\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.barOrientation.Horizontal);\n  }\n}\n\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\n\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.valueScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.valueScale)(\"activeEntries\", ctx_r8.activeEntries)(\"yScale\", ctx_r8.innerScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r16.valueScale)(\"activeEntries\", ctx_r16.activeEntries)(\"yScale\", ctx_r16.innerScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxWidthChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"activeEntries\", ctx_r8.activeEntries)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxWidthChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"activeEntries\", ctx_r16.activeEntries)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\n\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bar_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r3.animations)(\"width\", bar_r4.width)(\"height\", bar_r4.height)(\"x\", bar_r4.x)(\"y\", bar_r4.y)(\"fill\", bar_r4.color)(\"stops\", bar_r4.gradientStops)(\"data\", bar_r4.data)(\"orientation\", ctx_r3.barOrientation.Vertical)(\"roundEdges\", bar_r4.roundEdges)(\"gradient\", ctx_r3.gradient)(\"ariaLabel\", bar_r4.ariaLabel)(\"isActive\", ctx_r3.isActive(bar_r4.data))(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.tooltipPlacement)(\"tooltipType\", ctx_r3.tooltipType)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : bar_r4.tooltipText)(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", bar_r4.data)(\"noBarWhenZero\", ctx_r3.noBarWhenZero)(\"animations\", ctx_r3.animations);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bars)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bar_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r10.width)(\"height\", bar_r10.height)(\"x\", bar_r10.x)(\"y\", bar_r10.y)(\"fill\", bar_r10.color)(\"stops\", bar_r10.gradientStops)(\"data\", bar_r10.data)(\"orientation\", ctx_r9.barOrientation.Vertical)(\"roundEdges\", bar_r10.roundEdges)(\"gradient\", ctx_r9.gradient)(\"ariaLabel\", bar_r10.ariaLabel)(\"isActive\", ctx_r9.isActive(bar_r10.data))(\"tooltipDisabled\", ctx_r9.tooltipDisabled)(\"tooltipPlacement\", ctx_r9.tooltipPlacement)(\"tooltipType\", ctx_r9.tooltipType)(\"tooltipTitle\", ctx_r9.tooltipTemplate ? undefined : bar_r10.tooltipText)(\"tooltipTemplate\", ctx_r9.tooltipTemplate)(\"tooltipContext\", bar_r10.data)(\"noBarWhenZero\", ctx_r9.noBarWhenZero)(\"animations\", ctx_r9.animations);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r17\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const b_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r16.x)(\"barY\", b_r16.y)(\"barWidth\", b_r16.width)(\"barHeight\", b_r16.height)(\"value\", b_r16.total)(\"valueFormatting\", ctx_r15.dataLabelFormatting)(\"orientation\", ctx_r15.barOrientation.Vertical);\n  }\n}\n\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.barsForDataLabels)(\"ngForTrackBy\", ctx_r2.trackDataLabelBy);\n  }\n}\n\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r8.activeEntries)(\"xScale\", ctx_r8.innerScale)(\"yScale\", ctx_r8.valueScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r16.activeEntries)(\"xScale\", ctx_r16.innerScale)(\"yScale\", ctx_r16.valueScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n  }\n}\n\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event, group_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, group_r15));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event, group_r15));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event, group_r15));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onClick($event, group_r9));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onActivate($event, group_r9));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onDeactivate($event, group_r9));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.onDataLabelMaxHeightChanged($event, index_r10));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onClick($event, group_r17));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.onActivate($event, group_r17));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onDeactivate($event, group_r17));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDataLabelMaxHeightChanged($event, index_r18));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"activeEntries\", ctx_r16.activeEntries)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\n\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nconst _c30 = [\"ngx-charts-box\", \"\"];\n\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r1.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r1.medianLineWidth : ctx_r1.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r1.maskLine);\n  }\n}\n\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\n\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"yScale\", ctx_r0.yScale)(\"colors\", ctx_r0.colors)(\"roundEdges\", ctx_r0.roundEdges)(\"strokeColor\", ctx_r0.strokeColor)(\"strokeWidth\", ctx_r0.strokeWidth)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"series\", result_r1)(\"dims\", ctx_r0.dims)(\"animations\", ctx_r0.animations)(\"gradient\", ctx_r0.gradient);\n  }\n}\n\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\n\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\n\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onClick(circle_r1.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.activateCircle(circle_r1));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deactivateCircle(circle_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.placementTypes.Top)(\"tooltipType\", ctx_r3.styleTypes.tooltip)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : ctx_r3.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\n\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1);\n    i0.ɵɵtemplate(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const circle_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", circle_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r0.showGridLines)(\"dims\", ctx_r0.dims)(\"xScale\", ctx_r0.xScale)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const series_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onClick($event, series_r9));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"rScale\", ctx_r8.rScale)(\"xScaleType\", ctx_r8.xScaleType)(\"yScaleType\", ctx_r8.yScaleType)(\"xAxisLabel\", ctx_r8.xAxisLabel)(\"yAxisLabel\", ctx_r8.yAxisLabel)(\"colors\", ctx_r8.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r8.activeEntries)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r2.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.data)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const series_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, series_r15));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"rScale\", ctx_r14.rScale)(\"xScaleType\", ctx_r14.xScaleType)(\"yScaleType\", ctx_r14.yScaleType)(\"xAxisLabel\", ctx_r14.xAxisLabel)(\"yAxisLabel\", ctx_r14.yAxisLabel)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\n\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r3.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\n\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\n\nconst _c35 = function (a0, a1, a2) {\n  return {\n    series: a0,\n    name: a1,\n    value: a2\n  };\n};\n\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r1.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit(c_r1.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit(c_r1.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"data\", c_r1.data)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r1.series, c_r1.label, c_r1.data));\n  }\n}\n\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\n\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n\n  if (rf & 2) {\n    const rect_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r7.x)(\"y\", rect_r7.y)(\"rx\", rect_r7.rx)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\n\nconst _c36 = [\"ngx-charts-line\", \"\"];\n\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\n\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r1.initialPath)(\"fill\", ctx_r1.fill)(\"stroke\", ctx_r1.stroke);\n  }\n}\n\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\n\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(ctx_r1.data))(\"inactive\", ctx_r1.isInactive(ctx_r1.data));\n    i0.ɵɵproperty(\"data\", ctx_r1.data)(\"path\", ctx_r1.outerPath)(\"fill\", ctx_r1.hasGradient ? ctx_r1.gradientUrl : ctx_r1.colors.getColor(ctx_r1.data.name))(\"opacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\n\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels);\n  }\n}\n\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"data\", series_r11)(\"activeEntries\", ctx_r10.activeEntries)(\"scaleType\", ctx_r10.scaleType)(\"curve\", ctx_r10.curve)(\"rangeFillOpacity\", ctx_r10.rangeFillOpacity)(\"hasRange\", ctx_r10.hasRange)(\"animations\", ctx_r10.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\n\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"hasRange\", ctx_r12.hasRange)(\"animations\", ctx_r12.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\n\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"scaleType\", ctx_r14.scaleType)(\"visibleValue\", ctx_r14.hoveredVertical)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\n\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r4.dims)(\"xSet\", ctx_r4.xSet)(\"xScale\", ctx_r4.xScale)(\"yScale\", ctx_r4.yScale)(\"results\", ctx_r4.results)(\"colors\", ctx_r4.colors)(\"tooltipDisabled\", ctx_r4.tooltipDisabled)(\"tooltipTemplate\", ctx_r4.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results);\n  }\n}\n\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r24 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r23.timelineXScale)(\"yScale\", ctx_r23.timelineYScale)(\"colors\", ctx_r23.colors)(\"data\", series_r24)(\"scaleType\", ctx_r23.scaleType)(\"curve\", ctx_r23.curve)(\"hasRange\", ctx_r23.hasRange)(\"animations\", ctx_r23.animations);\n  }\n}\n\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r5.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.timelineWidth, ctx_r5.height))(\"height\", ctx_r5.timelineHeight)(\"scheme\", ctx_r5.scheme)(\"customColors\", ctx_r5.customColors)(\"scaleType\", ctx_r5.scaleType)(\"legend\", ctx_r5.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r5.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\n\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\n\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.select.emit(circle_r2.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.activate.emit({\n        name: circle_r2.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deactivate.emit({\n        name: circle_r2.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r2.cx)(\"cy\", circle_r2.cy)(\"r\", ctx_r1.circleRadius)(\"fill\", circle_r2.color)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(circle_r2))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\n\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n\n  if (rf & 2) {\n    const r_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r7);\n  }\n}\n\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.radiusTicks);\n  }\n}\n\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r9)(\"radius\", ctx_r8.outerRadius)(\"label\", tick_r9.label)(\"max\", ctx_r8.outerRadius)(\"value\", ctx_r8.showGridLines ? 1 : ctx_r8.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r8.animations)(\"labelTrim\", ctx_r8.labelTrim)(\"labelTrimSize\", ctx_r8.labelTrimSize);\n  }\n}\n\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\n\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r2.yAxisScale)(\"dims\", ctx_r2.yAxisDims)(\"showGridLines\", ctx_r2.showGridLines)(\"showLabel\", ctx_r2.showYAxisLabel)(\"labelText\", ctx_r2.yAxisLabel)(\"trimTicks\", ctx_r2.trimYAxisTicks)(\"maxTickLength\", ctx_r2.maxYAxisTickLength)(\"tickFormatting\", ctx_r2.yAxisTickFormatting);\n    i0.ɵɵattribute(\"transform\", ctx_r2.transformYAxis);\n  }\n}\n\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r3.xAxisLabel)(\"offset\", ctx_r3.labelOffset)(\"orient\", ctx_r3.orientation.Bottom)(\"height\", ctx_r3.dims.height)(\"width\", ctx_r3.dims.width);\n  }\n}\n\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r12.gradient)(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"animations\", ctx_r12.animations)(\"tooltipDisabled\", ctx_r12.tooltipDisabled)(\"tooltipTemplate\", ctx_r12.tooltipTemplate);\n  }\n}\n\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\n\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const series_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r18.gradient)(\"xScale\", ctx_r18.xScale)(\"yScale\", ctx_r18.yScale)(\"colors\", ctx_r18.colors)(\"data\", series_r19)(\"activeEntries\", ctx_r18.activeEntries)(\"scaleType\", ctx_r18.scaleType)(\"curve\", ctx_r18.curve)(\"rangeFillOpacity\", ctx_r18.rangeFillOpacity)(\"animations\", ctx_r18.animations)(\"tooltipDisabled\", ctx_r18.tooltipDisabled)(\"tooltipTemplate\", ctx_r18.tooltipTemplate);\n  }\n}\n\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r5.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\n\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\n\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\n\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\n\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n\n  if (rf & 2) {\n    const arc_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r1)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r1))(\"label\", ctx_r2.labelText(arc_r1))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r1.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\n\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labelVisible(arc_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"gradient\", ctx_r0.gradient)(\"data\", arc_r1.data)(\"max\", ctx_r0.max)(\"explodeSlices\", ctx_r0.explodeSlices)(\"isActive\", ctx_r0.isActive(arc_r1.data))(\"animate\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.getTooltipTitle(arc_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", arc_r1.data);\n  }\n}\n\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\n\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"data\", arc_r1.data)(\"gradient\", false)(\"pointerEvents\", arc_r1.pointerEvents)(\"animate\", arc_r1.animate);\n    i0.ɵɵattribute(\"class\", arc_r1.class);\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r1.percent)(\"countSuffix\", \"%\");\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.percent.toLocaleString(), \" \");\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r1.total)(\"countPrefix\", ctx_r4.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n  }\n}\n\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.label, \": \", series_r1.total.toLocaleString(), \" \");\n  }\n}\n\nconst _c44 = function (a0) {\n  return {\n    data: a0\n  };\n};\n\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5);\n    i0.ɵɵtemplate(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8);\n    i0.ɵɵtemplate(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const series_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colors\", series_r1.colors)(\"data\", series_r1.data)(\"innerRadius\", series_r1.innerRadius)(\"outerRadius\", series_r1.outerRadius)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r1)))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", series_r1.data[0].data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\n\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\n\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r0.bandColor)(\"transform\", ctx_r0.transformBand)(\"d\", ctx_r0.bandPath);\n  }\n}\n\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\n\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r0.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height);\n  }\n}\n\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"color\", c_r3.color)(\"bandColor\", c_r3.bandColor)(\"textColor\", c_r3.textColor)(\"data\", c_r3.data)(\"label\", c_r3.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\n\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\n\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r2.value)(\"valueFormatting\", ctx_r2.valueFormatting);\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedValue, \" \");\n  }\n}\n\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template, 1, 2, \"span\", 6);\n    i0.ɵɵtemplate(5, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r1.x)(\"y\", ctx_r1.y)(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.getTextColor())(\"height\", ctx_r1.height + \"px\")(\"width\", ctx_r1.width + \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\n\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\n\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r1.data)(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"label\", c_r1.label)(\"value\", c_r1.value)(\"valueFormatting\", ctx_r0.valueFormatting)(\"labelFormatting\", ctx_r0.labelFormatting)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", c_r1.data);\n  }\n}\n\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\n\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.transformLine)(\"stroke\", ctx_r0.colors.getColor(ctx_r0.units));\n  }\n}\n\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\n\nconst _c52 = function () {\n  return {};\n};\n\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\n\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\n\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r4.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tick_r4.text, \" \");\n  }\n}\n\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r5.line);\n  }\n}\n\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.rotation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r0.cornerRadius)(\"colors\", ctx_r0.colors)(\"isActive\", ctx_r0.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"valueFormatting\", ctx_r0.valueFormatting)(\"animations\", ctx_r0.animations);\n  }\n}\n\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\n\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7, 8)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r2.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.units);\n  }\n}\n\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function () {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this; // eslint-disable-next-line prefer-rest-params\n\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\n\n\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\n\nvar PlacementTypes;\n\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\n\n\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n\n\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n\n    return placement;\n  }\n\n}\n\nclass TooltipContentComponent {\n  constructor(element, renderer, platformId) {\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n\n  get cssClasses() {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(this.position.bind(this));\n  }\n\n  position() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect(); // if no dims were found, never show\n\n    if (!hostDim.height && !hostDim.width) return;\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    } // animate its entry\n\n\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n\n  positionContent(nativeElm, hostDim, elmDim) {\n    const {\n      top,\n      left\n    } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n\n  positionCaret(hostDim, elmDim) {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const {\n      top,\n      left\n    } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n\n  checkFlip(hostDim, elmDim) {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n\n  onWindowResize() {\n    this.position();\n  }\n\n}\n\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"hidden\"], [\"caretElm\", \"\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 0, 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3);\n      i0.ɵɵtemplate(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\n\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n\n  destroyByType(type) {\n    const comps = this.components.get(type);\n\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n\n  assignDefaults(bindings) {\n    const inputs = { ...this.defaults.inputs\n    };\n    const outputs = { ...this.defaults.outputs\n    };\n\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n\n    if (inputs) {\n      bindings.inputs = { ...inputs,\n        ...bindings.inputs\n      };\n    }\n\n    if (outputs) {\n      bindings.outputs = { ...outputs,\n        ...bindings.outputs\n      };\n    }\n\n    return bindings;\n  }\n\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n\n    const types = this.components.get(type);\n    types.push(component);\n  }\n\n}\n\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\n\n\nclass InjectionService {\n  constructor(applicationRef, componentFactoryResolver, injector) {\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n\n\n  static setGlobalRootViewContainer(container) {\n    InjectionService.globalRootViewContainer = container;\n  }\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n\n\n  getRootViewContainer() {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n  }\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n\n\n  setRootViewContainer(container) {\n    this._container = container;\n  }\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n\n\n  getComponentRootNode(component) {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n\n    if (component.hostView && component.hostView.rootNodes.length > 0) {\n      return component.hostView.rootNodes[0];\n    } // the top most component root node has no `hostView`\n\n\n    return component.location.nativeElement;\n  }\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n\n\n  getRootViewContainerNode(component) {\n    return this.getComponentRootNode(component);\n  }\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n\n\n  projectComponentBindings(component, bindings) {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n\n    return component;\n  }\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n\n\n  appendComponent(componentClass, bindings = {}, location) {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n    const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(componentClass);\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n\n}\n\nInjectionService.globalRootViewContainer = null;\n\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\n\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n\nclass TooltipService extends InjectionRegisteryService {\n  constructor(injectionService) {\n    super(injectionService);\n    this.type = TooltipContentComponent;\n  }\n\n}\n\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\n\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\n\nvar LegendPosition;\n\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\n\nvar LegendType;\n\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n  constructor() {\n    this.horizontal = false;\n  }\n\n  ngOnChanges(changes) {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n  }\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n\n\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n    return pairs.join(', ');\n  }\n\n}\n\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\n\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\n\n\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\n\n\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\n\nclass LegendEntryComponent {\n  constructor() {\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n\n  get trimmedLabel() {\n    return this.formattedLabel || '(empty)';\n  }\n\n  onMouseEnter() {\n    this.activate.emit({\n      name: this.label\n    });\n  }\n\n  onMouseLeave() {\n    this.deactivate.emit({\n      name: this.label\n    });\n  }\n\n}\n\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\n\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"title\", \"click\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass LegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries() {\n    const items = [];\n\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item) {\n    return item.label;\n  }\n\n}\n\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [LegendEntryComponent, i2.NgIf, i2.NgForOf],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ChartComponent {\n  constructor() {\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    let legendColumns = 0;\n\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n\n      if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n        if (this.legendType === LegendType.ScaleLegend) {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n\n    const chartColumns = 12 - legendColumns;\n    this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n  }\n\n  getLegendType() {\n    return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n  }\n\n}\n\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\n\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2);\n      i0.ɵɵtemplate(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  dependencies: [ScaleLegendComponent, LegendComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Visibility Observer\n */\n\n\nclass VisibilityObserver {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck() {\n    const check = () => {\n      if (!this.element) {\n        return;\n      } // https://davidwalsh.name/offsetheight-visibility\n\n\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n\n}\n\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\n\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.animations = false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.bindWindowResizeEvent(); // listen for visibility of the element for hidden by default scenario\n\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.unbindEvents();\n\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    } // default values if width or height are 0 or undefined\n\n\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims() {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n\n\n  formatDates() {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n\n      if (isDate(g.label)) {\n        g.label = g.label.toLocaleDateString();\n      }\n\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n\n          if (isDate(d.label)) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  unbindEvents() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  bindWindowResizeEvent() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const source = fromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n\n\n  cloneData(data) {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n\n}\n\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: ` <div></div> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar Orientation;\n\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n  constructor(element) {\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case Orientation.Top:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n\n      case Orientation.Bottom:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n\n      case Orientation.Left:\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n\n      case Orientation.Right:\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n\n      default:\n    }\n  }\n\n}\n\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\n\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  s = s.trim();\n\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n\nvar TextAnchor;\n\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.dimensionsChanged.emit({\n        height: this.approxHeight\n      });\n      return;\n    }\n\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({\n        height: this.height\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update() {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n\n        return d.toLocaleString();\n      };\n    }\n\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n    this.adjustedScale = this.scale.bandwidth ? function (d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n    this.textTransform = '';\n\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = TextAnchor.End;\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = TextAnchor.Middle;\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  getRotationAngle(ticks) {\n    let angle = 0;\n    this.maxTicksLength = 0;\n\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 7; // need to measure this\n\n    const wordWidth = len * charWidth;\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length); // calculate optimal angle\n\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickWidth) {\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n\n}\n\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 5, 7, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\n\nclass XAxisComponent {\n  constructor() {\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n\n  emitTicksHeight({\n    height\n  }) {\n    const newLabelOffset = height + 25 + 5;\n\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          height\n        });\n      }, 0);\n    }\n  }\n\n}\n\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\n\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 12, \"g\", 0);\n      i0.ɵɵtemplate(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [XAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\n\n\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n\n  retval += `v${h - 2 * r}`;\n\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n\n  retval += `h${2 * r - w}`;\n\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n\n  retval += `v${2 * r - h}`;\n\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n\n  retval += `z`;\n  return retval;\n}\n\nclass YAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.width = this.getApproximateAxisWidth();\n      this.dimensionsChanged.emit({\n        width: this.width\n      });\n      return;\n    }\n\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({\n        width\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update() {\n    const scale = this.scale;\n    const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n\n        return d.toLocaleString();\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth ? function (d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case Orientation.Top:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n\n      case Orientation.Bottom:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n\n      case Orientation.Left:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n\n        this.textAnchor = TextAnchor.End;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n\n      case Orientation.Right:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n\n        this.textAnchor = TextAnchor.Start;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n\n      default:\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  setReferencelines() {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight) {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick) {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform() {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n\n  getApproximateAxisWidth() {\n    const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n    const charWidth = 7;\n    return maxChars * charWidth;\n  }\n\n}\n\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [1, \"reference-area\"], [4, \"ngIf\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 5, 9, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 2);\n      i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 3);\n      i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\n\nclass YAxisComponent {\n  constructor() {\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.offset = -(this.yAxisOffset + this.padding);\n\n    if (this.yOrient === Orientation.Right) {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({\n    width\n  }) {\n    if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    }\n  }\n\n}\n\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\n\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 14, \"g\", 0);\n      i0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [YAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\n\nclass AxesModule {}\n\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\n\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\n\nvar StyleTypes;\n\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n  constructor(tooltipService, viewContainerRef, renderer) {\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n\n  get listensForFocus() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n\n  get listensForHover() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n\n  ngOnDestroy() {\n    this.hideTooltip(true);\n  }\n\n  onFocus() {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n\n  onBlur() {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n\n  onMouseEnter() {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n\n  onMouseLeave(target) {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n\n  showTooltip(immediate) {\n    if (this.component || this.tooltipDisabled) return;\n    const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options); // add a tiny timeout to avoid event re-triggers\n\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n      this.show.emit(true);\n    }, time);\n  }\n\n  addHideListeners(tooltip) {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    }); // content mouse leave listener\n\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    } // content close on click outside\n\n\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n\n  hideTooltip(immediate = false) {\n    if (!this.component) return;\n\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent(); // emit events\n\n      this.hide.emit(true); // destroy component\n\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n\n    clearTimeout(this.timeout);\n\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n\n  createBoundOptions() {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n\n}\n\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nclass TooltipModule {}\n\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\n\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\n\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4); // append a 'a' because neo gets mad\n\n  newId = `a${newId}`; // ensure not already used\n\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n\nvar BarOrientation;\n\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n  constructor() {\n    this.orientation = BarOrientation.Vertical;\n  }\n\n  ngOnChanges(changes) {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === BarOrientation.Horizontal) {\n      this.x2 = '100%';\n    } else if (this.orientation === BarOrientation.Vertical) {\n      this.y1 = '100%';\n    }\n  }\n\n}\n\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\n\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\n\nclass CircleComponent {\n  constructor() {\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n\n  ngOnChanges(changes) {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n\n}\n\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\n\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar SeriesType;\n\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\n\nclass CircleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.circle = this.getActiveCircle();\n  }\n\n  getActiveCircle() {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n\n  mapDataPointToCircle(d, i) {\n    const seriesName = this.data.name;\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n    let cx;\n\n    if (this.scaleType === ScaleType.Time) {\n      cx = this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n\n    const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n    let color;\n\n    if (this.colors.scaleType === ScaleType.Linear) {\n      if (this.type === SeriesType.Standard) {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n\n  getTooltipText({\n    tooltipLabel,\n    value,\n    seriesName,\n    min,\n    max\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n\n  getTooltipMinMaxText(min, max) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n\n        result += min.toLocaleString();\n\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  getGradientStops(color) {\n    return [{\n      offset: 0,\n      color,\n      opacity: 0.2\n    }, {\n      offset: 100,\n      color,\n      opacity: 1\n    }];\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activateCircle() {\n    this.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n\n  deactivateCircle() {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n\n}\n\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CircleComponent, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass GridPanelComponent {}\n\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\n\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ClassEnum;\n\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\n\nclass GridPanelSeriesComponent {\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels() {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = ClassEnum.Odd;\n\n      if (this.orient === BarOrientation.Vertical) {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === BarOrientation.Horizontal) {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n\n}\n\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\n\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  dependencies: [GridPanelComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\n\nclass SvgRadialGradientComponent {\n  constructor() {\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n\n  get stops() {\n    return this.stopsInput || this.stopsDefault;\n  }\n\n  set stops(value) {\n    this.stopsInput = value;\n  }\n\n  ngOnChanges(changes) {\n    this.r = '30%';\n\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [{\n        offset: 0,\n        color: this.color,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.color,\n        opacity: this.endOpacity\n      }];\n    }\n  }\n\n}\n\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\n\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\n\nclass AreaComponent {\n  constructor(element) {\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges() {\n    this.update();\n\n    if (!this.animationsLoaded) {\n      this.loadAnimation();\n      this.animationsLoaded = true;\n    }\n  }\n\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.updatePathEl.bind(this), 100);\n  }\n\n  updatePathEl() {\n    const node = select(this.element).select('.area');\n\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: this.endOpacity\n    }];\n  }\n\n}\n\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})(); // Robert Penner's easeOutExpo\n\n\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\n\n\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\n\n\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\n\n\nclass CountUpDirective {\n  constructor(cd, element) {\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n\n  set countDecimals(val) {\n    this._countDecimals = val;\n  }\n\n  get countDecimals() {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n\n  get countTo() {\n    return this._countTo;\n  }\n\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n\n  get countFrom() {\n    return this._countFrom;\n  }\n\n  ngOnDestroy() {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  start() {\n    cancelAnimationFrame(this.animationReq);\n\n    const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n\n    const callback = ({\n      value,\n      progress,\n      finished\n    }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({\n        value: this.value,\n        progress\n      });\n      if (finished) this.countFinish.emit({\n        value: this.value,\n        progress\n      });\n    };\n\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n\n}\n\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: ` {{ value }} `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})(); // If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\n\n\nlet root;\n\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} // tslint:disable-next-line:variable-name\n\n\nconst MouseEvent = root.MouseEvent;\n\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\n\nclass TooltipArea {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n\n  getValues(xVal) {\n    const results = [];\n\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n\n        let color;\n\n        if (this.colors.scaleType === ScaleType.Linear) {\n          let v = val;\n\n          if (item.d1) {\n            v = item.d1;\n          }\n\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n        results.push(data);\n      }\n    }\n\n    return results;\n  }\n\n  mouseMove(event) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n    this.anchorValues = this.getValues(closestPoint);\n\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n      const curDiff = Math.abs(currentElement - xPos);\n\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  showTooltip() {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n\n  hideTooltip() {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n\n  getToolTipText(tooltipItem) {\n    let result = '';\n\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n\n    result += ': ';\n\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n\n        result += tooltipItem.min.toLocaleString();\n\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n\n      result += ')';\n    }\n\n    return result;\n  }\n\n}\n\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mousemove\", \"mouseleave\"], [\"defaultTooltipTemplate\", \"\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [\"tooltipAnchor\", \"\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 0);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template__svg_rect_mousemove_1_listener($event) {\n        return ctx.mouseMove($event);\n      })(\"mouseleave\", function TooltipArea_Template__svg_rect_mouseleave_1_listener() {\n        return ctx.hideTooltip();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : _r0)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  dependencies: [i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nclass Timeline {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n\n  update() {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n\n    if (this.brush) {\n      this.updateBrush();\n    }\n\n    this.transform = `translate(0 , ${offsetY})`;\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n    this.cd.markForCheck();\n  }\n\n  getXDomain() {\n    let values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    let domain = [];\n\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    let scale;\n\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  addBrush() {\n    if (this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n      selection\n    }) => {\n      const newSelection = selection || this.xScale.range();\n      const newDomain = newSelection.map(this.xScale.invert);\n      this.onDomainChange.emit(newDomain);\n      this.cd.markForCheck();\n    });\n    select(this.element).select('.brush').call(this.brush);\n  }\n\n  updateBrush() {\n    if (!this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element).select('.brush').call(this.brush); // clear hardcoded properties so they can be defined by CSS\n\n    select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n    this.cd.markForCheck();\n  }\n\n  getDims() {\n    const width = this.view[0];\n    const dims = {\n      width,\n      height: this.height\n    };\n    return dims;\n  }\n\n}\n\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass AdvancedLegendComponent {\n  constructor() {\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n\n    this.labelFormatting = label => label;\n\n    this.percentageFormatting = percentage => percentage;\n\n    this.defaultValueFormatting = value => value.toLocaleString();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  getTotal() {\n    return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n  }\n\n  update() {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems() {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? value / this.total * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n\n  trackBy(index, item) {\n    return item.label;\n  }\n\n}\n\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\n\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CountUpDirective, i2.NgIf, i2.NgForOf],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\n\nclass ChartCommonModule {}\n\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\n\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [...COMPONENTS, VisibilityObserver],\n      exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n    }]\n  }], null, null);\n})();\n\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\n\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\n\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n\n    let colorScale;\n\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    return colorScale;\n  }\n\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value); // generate the stops\n\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n\n    return stops;\n  }\n\n}\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\n\n\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\n\n\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n\n  const allNumbers = values.every(value => typeof value === 'number');\n\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n\n  return ScaleType.Ordinal;\n}\n\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n\n  let min;\n  let max;\n\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max]; // Use compare function to sort numbers numerically\n\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n\nclass AreaSeriesComponent {\n  constructor() {\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.updateGradient();\n    let currentArea;\n    let startingArea;\n\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n      startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n      startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n    this.opacity = 0.8;\n    let data = this.data.series;\n\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n\n  updateGradient() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\n\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nclass AreaChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.baseValue = 'auto';\n    this.autoScale = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max]; // Use compare function to sort numbers numerically\n\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width) {\n    let scale;\n\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getScaleType(values) {\n    let date = true;\n    let num = true;\n\n    for (const value of values) {\n      if (isDate(value)) {\n        date = false;\n      }\n\n      if (isNumber(value)) {\n        num = false;\n      }\n    }\n\n    if (date) {\n      return ScaleType.Time;\n    }\n\n    if (num) {\n      return ScaleType.Linear;\n    }\n\n    return ScaleType.Ordinal;\n  }\n\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n}\n\nAreaChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n}();\n\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.yDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.seriesType = SeriesType;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      let total = 0;\n\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n\n          return a === b;\n        });\n\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = d.d0 * 100 / total;\n          d.d1 = d.d1 * 100 / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max]; // Use compare function to sort numbers numerically\n\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width) {\n    let scale;\n\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n}\n\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n}();\n\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.seriesType = SeriesType;\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max]; // Use compare function to sort numbers numerically\n\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    const domain = [];\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width) {\n    let scale;\n\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n}\n\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n}();\n\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartStackedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass AreaChartModule {}\n\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\n\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nclass BarComponent {\n  constructor(element) {\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n\n    this.update();\n  }\n\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl() {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n\n    if (this.animations) {\n      node.transition().duration(500).attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === BarOrientation.Vertical) {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n\n    return path;\n  }\n\n  getRadius() {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n\n    return edges;\n  }\n\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n  }\n\n}\n\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template__svg_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nvar BarChartType;\n\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n  constructor(element) {\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  getSize() {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return {\n      height: h,\n      width: w,\n      negative: this.value < 0\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n\n  update() {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth; // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n\n}\n\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SeriesHorizontal {\n  constructor() {\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type;\n    d0Type = D0Types.positive;\n    let total;\n\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n    this.bars = this.series.map(d => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === BarChartType.Standard) {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n\n        bar.y = this.yScale(label);\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0; // if total is positive then we show it on the right, otherwise on the left\n\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n\n    return dataItem.name;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n  click(data) {\n    this.select.emit(data);\n  }\n\n}\n\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\n\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass BarHorizontalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n  }\n\n  getXDomain() {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n\n  getYDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarHorizontalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n}();\n\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n}();\n\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵtemplate(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n}();\n\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n}();\n\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass SeriesVerticalComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.updateTooltipSettings();\n    let width;\n\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n    let total;\n\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === BarChartType.Standard) {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n\n    return dataItem.name;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n}\n\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass BarVerticalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n  }\n\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n\n    return [min, max];\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarVerticalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n}();\n\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarVertical2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.scaleType = ScaleType.Ordinal;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n\n  getInnerScale() {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarVertical2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n}();\n\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVertical2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n}();\n\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n}();\n\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass BarChartModule {}\n\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\n\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\n\nconst cloneDeep = rfdc();\n\nclass BoxComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update() {\n    this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n    this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n    this.medianLineWidth = 1.5 * this.strokeWidth;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updateLineEl();\n    this.updatePathEl();\n    this.checkToHideBar();\n    this.maskLineId = 'mask' + id().toString();\n    this.maskLine = `url(#${this.maskLineId})`;\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  loadAnimation() {\n    this.boxPath = this.oldPath = this.getStartingPath();\n    this.oldLineCoordinates = this.getStartingLineCoordinates();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl() {\n    const nodeBar = select(this.nativeElm).selectAll('.bar');\n    const path = this.getPath();\n\n    if (this.animations) {\n      nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n    } else {\n      nodeBar.attr('d', path);\n    }\n\n    this.oldPath = path;\n  }\n\n  updateLineEl() {\n    const lineEl = select(this.nativeElm).selectAll('.bar-line');\n    const lineCoordinates = this.lineCoordinates;\n    const oldLineCoordinates = this.oldLineCoordinates;\n\n    if (this.animations) {\n      lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    } else {\n      lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    }\n\n    this.oldLineCoordinates = [...lineCoordinates];\n  }\n  /**\n   * See [D3 Selections](https://www.d3indepth.com/selections/)\n   * @param d The joined data.\n   * @param index The index of the element within the selection\n   * @param node The node element (Line).\n   */\n\n\n  lineTween(attr, d, index, node) {\n    const nodeLineEl = node[index];\n    return nodeLineEl[attr].baseVal.value;\n  } // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n\n\n  pathTween(d1, precision) {\n    return function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const path0 = this;\n      const path1 = this.cloneNode();\n      path1.setAttribute('d', d1);\n      const n0 = path0?.getTotalLength();\n      const n1 = path1?.getTotalLength(); // Uniform sampling of distance based on specified precision.\n\n      const distances = [0];\n      let i = 0;\n      const dt = precision / Math.max(n0, n1);\n\n      while (i < 1) {\n        distances.push(i);\n        i += dt;\n      }\n\n      distances.push(1); // Compute point-interpolators at each distance.\n\n      const points = distances.map(t => {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      }); // 't': T is the fraction of time (between 0 and 1) since the transition began.\n\n      return t => {\n        return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n      };\n    };\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    const radius = this.roundEdges ? 1 : 0;\n    const {\n      x,\n      y\n    } = this.lineCoordinates[2].v1;\n    return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n  }\n\n  getPath() {\n    const radius = this.getRadius();\n    let path = '';\n    path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n    return path;\n  }\n\n  getStartingLineCoordinates() {\n    if (!this.animations) {\n      return [...this.lineCoordinates];\n    }\n\n    const lineCoordinates = cloneDeep(this.lineCoordinates);\n    lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n    return lineCoordinates;\n  }\n\n  getRadius() {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getGradient() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n\n    if (this.roundEdges) {\n      edges = [true, true, true, true];\n    }\n\n    return edges;\n  }\n\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && this.height === 0;\n  }\n\n}\n\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template__svg_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass BoxSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  update() {\n    this.updateTooltipSettings();\n    const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n    const seriesName = this.series.name; // Calculate Quantile and Whiskers for each box serie.\n\n    this.counts = this.series.series;\n    const mappedCounts = this.counts.map(serie => Number(serie.value));\n    this.whiskers = [min(mappedCounts), max(mappedCounts)]; // We get the group count and must sort it in order to retrieve quantiles.\n\n    const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n    this.quartiles = this.getBoxQuantiles(groupCounts);\n    this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n    const value = this.quartiles[1];\n    const formattedLabel = formatLabel(seriesName);\n    const box = {\n      value,\n      data: this.counts,\n      label: seriesName,\n      formattedLabel,\n      width,\n      height: 0,\n      x: 0,\n      y: 0,\n      roundEdges: this.roundEdges,\n      quartiles: this.quartiles,\n      lineCoordinates: this.lineCoordinates\n    };\n    box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n    box.x = this.xScale(seriesName.toString());\n    box.y = this.yScale(this.quartiles[2]);\n    box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n\n    if (this.colors.scaleType === ScaleType.Ordinal) {\n      box.color = this.colors.getColor(seriesName);\n    } else {\n      box.color = this.colors.getColor(this.quartiles[1]);\n      box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n    }\n\n    const tooltipLabel = formattedLabel;\n    const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n    box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n    this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n    this.box = box;\n  }\n\n  getBoxQuantiles(inputData) {\n    return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n  }\n\n  getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n    // The X value is not being centered, so had to sum half the width to align it.\n    const commonX = this.xScale(seriesName);\n    const offsetX = commonX + barWidth / 2;\n    const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n    const whiskerLineWidth = Math.max(barWidth / 3, 1);\n    const whiskerZero = this.yScale(whiskers[0]);\n    const whiskerOne = this.yScale(whiskers[1]);\n    const median = this.yScale(quartiles[1]);\n    const topLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerZero\n      }\n    };\n    const medianLine = {\n      v1: {\n        x: offsetX + medianLineWidth / 2,\n        y: median\n      },\n      v2: {\n        x: offsetX - medianLineWidth / 2,\n        y: median\n      }\n    };\n    const bottomLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerOne\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerOne\n      }\n    };\n    const verticalLine = {\n      v1: {\n        x: offsetX,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX,\n        y: whiskerOne\n      }\n    };\n    return [verticalLine, topLine, medianLine, bottomLine];\n  }\n\n  updateTooltipSettings() {\n    if (this.tooltipDisabled) {\n      this.tooltipPlacement = undefined;\n      this.tooltipType = undefined;\n    } else {\n      if (!this.tooltipPlacement) {\n        this.tooltipPlacement = PlacementTypes.Top;\n      }\n\n      if (!this.tooltipType) {\n        this.tooltipType = StyleTypes.tooltip;\n      }\n    }\n  }\n\n}\n\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\n\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template__svg_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template__svg_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template__svg_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass BoxChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    /** Show or hide the legend. */\n\n    this.legend = false;\n    this.legendPosition = LegendPosition.Right;\n    this.legendTitle = 'Legend';\n    this.showGridLines = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.strokeColor = '#FFFFFF';\n    this.strokeWidth = 2;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n\n    this.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n\n    this.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n\n    this.yAxisWidth = 0;\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  setColors() {\n    let domain = [];\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  setScales() {\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n  }\n\n  getXScale(domain, width) {\n    const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n    return scale;\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().domain(domain).range([height, 0]);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getUniqueBoxChartXDomainValues(results) {\n    const valueSet = new Set();\n\n    for (const result of results) {\n      valueSet.add(result.name);\n    }\n\n    return Array.from(valueSet);\n  }\n\n  getXDomain() {\n    let domain = [];\n    const values = this.getUniqueBoxChartXDomainValues(this.results);\n    let min;\n    let max;\n\n    if (typeof values[0] === 'string') {\n      domain = values.map(val => val.toString());\n    } else if (typeof values[0] === 'number') {\n      const mappedValues = values.map(v => Number(v));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [min, max];\n    } else {\n      const mappedValues = values.map(v => Number(new Date(v)));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [new Date(min), new Date(max)];\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n    const mappedValues = values.map(v => Number(v));\n    const min = Math.min(...mappedValues);\n    const max = Math.max(...mappedValues);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => `${d.name}`);\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  onActivate(data) {\n    this.activate.emit(data);\n  }\n\n  onDeactivate(data) {\n    this.deactivate.emit(data);\n  }\n\n  getLegendOptions() {\n    const legendOpts = {\n      scaleType: this.schemeType,\n      colors: this.colors,\n      domain: [],\n      position: this.legendPosition,\n      title: this.legendTitle\n    };\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      legendOpts.domain = this.xDomain;\n      legendOpts.colors = this.colors;\n    } else {\n      legendOpts.domain = this.yDomain;\n      legendOpts.colors = this.colors.scale;\n    }\n\n    return legendOpts;\n  }\n\n}\n\nBoxChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n}();\n\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 21,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\", \"activate\", \"deactivate\", \"select\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(18, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BoxSeriesComponent, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nclass BoxChartModule {}\n\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\n\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n\n  return domain;\n}\n\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n\n        if (roundDomains) {\n          return scale.nice();\n        }\n\n        return scale;\n      }\n\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n\n    default:\n      return undefined;\n  }\n}\n\nclass BubbleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.circles = this.getCircles();\n  }\n\n  getCircles() {\n    const seriesName = this.data.name;\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n        const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n        const isActive = !this.activeEntries.length ? true : this.isActive({\n          name: seriesName\n        });\n        const opacity = isActive ? 1 : 0.3;\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter(circle => circle !== undefined);\n  }\n\n  getTooltipText(circle) {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isVisible(circle) {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({\n        name: circle.seriesName\n      });\n    }\n\n    return circle.opacity !== 0;\n  }\n\n  activateCircle(circle) {\n    circle.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n\n  deactivateCircle(circle) {\n    circle.barVisible = false;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n\n  trackBy(index, circle) {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n\n}\n\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CircleComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass BubbleChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showGridLines = true;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.maxRadius = 10;\n    this.minRadius = 3;\n    this.schemeType = ScaleType.Ordinal;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.scaleType = ScaleType.Linear;\n    this.margin = [10, 20, 10, 20];\n    this.bubblePadding = [0, 0, 0, 0];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.activeEntries = [];\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n    const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n    this.data = this.results;\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n    this.legendOptions = this.getLegendOptions();\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  hideCircles() {\n    this.deactivateAll();\n  }\n\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n    return [yMin, xMax, yMax, xMin];\n  }\n\n  setScales() {\n    let width = this.dims.width;\n\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n\n    let height = this.dims.height;\n\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n\n  getYScale(domain, height) {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n\n  getXScale(domain, width) {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n\n  getRScale(domain, range) {\n    const scale = scaleLinear().range(range).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  getXDomain() {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n\n  getYDomain() {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n\n  getRDomain() {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n\n    return [min, max];\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n\n}\n\nBubbleChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n}();\n\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, BubbleChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template__svg_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5);\n      i0.ɵɵtemplate(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BubbleSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass BubbleChartModule {}\n\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\n\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nclass HeatMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    node.transition().duration(750).attr('opacity', 1);\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n\n}\n\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass HeatCellSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    const cells = [];\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n    return cells;\n  }\n\n  getTooltipText({\n    label,\n    data,\n    series\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n\n  trackBy(index, item) {\n    return item.label;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n}\n\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\n\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [HeatMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass HeatMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.innerPadding = 8;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.scaleType = ScaleType.Linear;\n  }\n\n  update() {\n    super.update();\n    this.formatDates();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n    this.scaleType = getScaleType(this.valueDomain, false);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.scaleType === ScaleType.Linear) {\n      let min = this.min;\n      let max = this.max;\n\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n\n      this.valueDomain = [min, max];\n    }\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n\n  getXDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    return domain;\n  }\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n\n\n  getDimension(value, index = 0, N, L) {\n    if (typeof value === 'string') {\n      value = value.replace('[', '').replace(']', '').replace('px', '') // tslint:disable-next-line: quotemark\n      .replace(\"'\", '');\n\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n\n    return N / (L / +value + 1);\n  }\n\n  getXScale() {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n  }\n\n  getYScale() {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n  }\n\n  getRects() {\n    const rects = [];\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n    return rects;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n      title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nHeatMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n}();\n\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"legendOptions\", \"legendLabelClick\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template__svg_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template__svg_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template__svg_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, HeatCellSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass HeatMapModule {}\n\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\n\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\n\nclass LineComponent {\n  constructor(element, platformId) {\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true; // @Output() select = new EventEmitter();\n\n    this.initialized = false;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n\n  updatePathEl() {\n    const node = select(this.element.nativeElement).select('.line');\n\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n}\n\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0);\n      i0.ɵɵtemplate(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LineSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.updateGradients();\n    const data = this.sortData(this.data.series);\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n\n  getLineGenerator() {\n    return line().x(d => {\n      const label = d.name;\n      let value;\n\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n\n      return value;\n    }).y(d => this.yScale(d.value)).curve(this.curve);\n  }\n\n  getRangeGenerator() {\n    return area().x(d => {\n      const label = d.name;\n      let value;\n\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n\n      return value;\n    }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n  }\n\n  getAreaGenerator() {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    return data;\n  }\n\n  updateGradients() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n}\n\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\n\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, AreaComponent, LineComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LineChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showRefLines = false;\n    this.showRefLabels = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max]; // Use compare function to sort numbers numerically\n\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain() {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n\n        if (d.min !== undefined) {\n          this.hasRange = true;\n\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n\n        if (d.max !== undefined) {\n          this.hasRange = true;\n\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width) {\n    let scale;\n\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, width]).domain(domain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, width]).domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n\n  setColors() {\n    let domain;\n\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n}\n\nLineChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n}();\n\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, LineChartComponent__svg_g_6_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\n\nclass LineChartModule {}\n\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\n\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nclass PieLabelComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnChanges(changes) {\n    this.setTransforms();\n    this.update();\n  }\n\n  setTransforms() {\n    if (isPlatformServer(this.platformId)) {\n      this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = `translate(${this.textX},${this.textY})`;\n      this.textTransition = !this.animations ? null : 'transform 0.75s';\n    } else {\n      const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n      this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n      this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n    }\n  }\n\n  update() {\n    let startRadius = this.radius;\n\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius); // Calculate innerPos then scale outer position to match label position\n\n    const innerPos = innerArc.centroid(this.data);\n    let scale = this.data.pos[1] / innerPos[1];\n\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n\n  get textX() {\n    return this.data.pos[0];\n  }\n\n  get textY() {\n    return this.data.pos[1];\n  }\n\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n}\n\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass PolarSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.updateGradients();\n    const line = this.getLineGenerator();\n    const data = this.sortData(this.data.series);\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n    this.path = line(data) || '';\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n\n  getAngle(d) {\n    const label = d.name;\n\n    if (this.scaleType === ScaleType.Time) {\n      return this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      return this.xScale(Number(label));\n    }\n\n    return this.xScale(label);\n  }\n\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n\n  getLineGenerator() {\n    return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      return sortByTime(data, 'name');\n    }\n\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n  defaultTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n\n    if (!this.hasGradient) {\n      return;\n    }\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n\n    if (this.colors.scaleType === ScaleType.Linear) {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n\n}\n\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\n\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, LineComponent, CircleComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nconst twoPI = 2 * Math.PI;\n\nclass PolarChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveCardinalClosed;\n    this.activeEntries = [];\n    this.rangeFillOpacity = 0.15;\n    this.trimYAxisTicks = true;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showSeriesOnHover = true;\n    this.gradient = false;\n    this.yAxisMinScale = 0;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter(); // series: any; // ???\n\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.orientation = Orientation;\n    this.isSSR = false;\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n\n  update() {\n    super.update();\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.setTicks();\n  }\n\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n    this.yAxisDims = { ...this.dims,\n      width: halfWidth\n    };\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n\n  setTicks() {\n    let tickFormat;\n\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n\n        return d.toLocaleString();\n      };\n    }\n\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n    const minDistance = 10;\n    /* from pie chart, abstract out -*/\n\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j]; // if they're on the same side\n\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n\n  getXValues() {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    return values;\n  }\n\n  getXDomain(values = this.getXValues()) {\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n\n    return values;\n  }\n\n  getYValues() {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain(domain = this.getYValues()) {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n    min = Math.max(0, min);\n\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n\n    return [min, max];\n  }\n\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width) {\n    switch (this.scaleType) {\n      case ScaleType.Time:\n        return scaleTime().range([0, width]).domain(domain);\n\n      case ScaleType.Linear:\n        {\n          const scale = scaleLinear().range([0, width]).domain(domain);\n          return this.roundDomains ? scale.nice() : scale;\n        }\n\n      default:\n        return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n    }\n  }\n\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([0, height]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    if (this.schemeType === ScaleType.Ordinal) {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n\n}\n\nPolarChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n}();\n\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3);\n      i0.ɵɵtemplate(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5);\n      i0.ɵɵtemplate(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3);\n      i0.ɵɵtemplate(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass PieArcComponent {\n  constructor(element) {\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n\n  update() {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n  }\n\n  loadAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().attrTween('d', function (d) {\n      this._current = this._current || d;\n      const copyOfD = Object.assign({}, d);\n      copyOfD.endAngle = copyOfD.startAngle;\n      const interpolater = interpolate(copyOfD, copyOfD);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    }).transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n\n  updateAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n\n  onClick() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n\n  onDblClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n\n}\n\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template__svg_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template__svg_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template__svg_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template__svg_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\n\nclass PieSeriesComponent {\n  constructor() {\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    const pieGenerator = pie().value(d => d.value).sort(null);\n    const arcData = pieGenerator(this.series);\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc() {\n    const factor = 1.5;\n    return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData) {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n\n        if (!this.labelVisible(b)) {\n          continue;\n        } // if they're on the same side\n\n\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(myArc) {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n\n  labelText(myArc) {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n\n    return this.label(myArc);\n  }\n\n  label(myArc) {\n    return formatLabel(myArc.data.name);\n  }\n\n  defaultTooltipText(myArc) {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  color(myArc) {\n    return this.colors.getColor(this.label(myArc));\n  }\n\n  trackBy(index, item) {\n    return item.data.name;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n}\n\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\n\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", \"dblclick\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieLabelComponent, PieArcComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width * 4 / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n}();\n\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\", \"select\", \"activate\", \"deactivate\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\", \"select\", \"activate\", \"deactivate\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nclass PieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = false;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.explodeSlices = false;\n    this.doughnut = false;\n    this.arcWidth = 0.25;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.dblclick = new EventEmitter();\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n\n  update() {\n    super.update();\n\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n\n    this.innerRadius = 0;\n\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n\n    this.domain = this.getDomain(); // sort data according to domain\n\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  hasNoOptionalMarginsSet() {\n    return !this.margins || this.margins.length <= 0;\n  }\n\n}\n\nPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n}();\n\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"dblclick\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template__svg_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template__svg_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template__svg_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n  constructor(element) {\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.layout = pie().value(d => d.data.value).sort(null);\n    this.arcs = this.getArcs();\n  }\n\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n\n  onClick(data) {\n    this.select.emit(this.data[0].data);\n  }\n\n  trackBy(index, item) {\n    return item.data.name;\n  }\n\n  label(arc) {\n    return arc.data.name;\n  }\n\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n\n}\n\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieArcComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass PieGridComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.minWidth = 150;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n    this.series = this.getSeries();\n    this.setColors();\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  defaultTooltipText({\n    data\n  }) {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  getSeries() {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n      let count = 0;\n\n      const colors = () => {\n        count += 1;\n\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n\n  getTotal() {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n}\n\nPieGridComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n}();\n\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  dependencies: [ChartComponent, PieGridSeriesComponent, CountUpDirective, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass PieChartModule {}\n\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\n\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nclass PolarChartModule {}\n\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\n\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\n\nclass CardComponent {\n  constructor(element, cd, zone, platformId) {\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR();\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }\n\n  update() {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n      this.label = this.label ? this.label : this.data.name;\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n      const value = hasValue ? valueFormatting(cardData) : '';\n      this.value = this.paddedValue(value);\n      this.setPadding();\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n      setTimeout(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.scaleText();\n        }\n\n        this.value = value;\n\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n\n  paddedValue(value) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n\n    return value;\n  }\n\n  startCount() {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const callback = ({\n        value,\n        finished\n      }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({\n            label: this.label,\n            data: this.data,\n            value\n          });\n\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n\n          this.cd.markForCheck();\n        });\n      };\n\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n\n  scaleText() {\n    this.zone.run(() => {\n      const {\n        width,\n        height\n      } = this.textEl.nativeElement.getBoundingClientRect();\n\n      if (width === 0 || height === 0) {\n        return;\n      }\n\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n\n  scaleTextSSR() {\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n    const height = 18;\n    const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const availableWidth = this.cardWidth - 2 * textPadding;\n    const availableHeight = this.cardHeight / 3;\n    const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n    this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n    this.labelFontSize = Math.min(this.textFontSize, 15);\n    this.setPadding();\n  }\n\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n}\n\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"textEl\", \"\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template__svg_g_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelement(1, \"rect\", 1);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 2);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 3);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 5, 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * Converts a hex to RGB\n *\n * @export\n */\n\n\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\n\n\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n\n  if (opacity === 0) {\n    return color.toString();\n  }\n\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\n\n\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n  constructor() {\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const sortedLengths = this.data.map(d => {\n        const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n        return hasValue ? valueFormatting({\n          data: d.data,\n          label: d ? d.data.name : '',\n          value: d && d.data ? d.data.value : ''\n        }).length : 0;\n      }).sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n\n  getCards() {\n    const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n\n  trackBy(index, card) {\n    return card.label;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n}\n\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\n\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0);\n      i0.ɵɵtemplate(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CardComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NumberCardComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.innerPadding = 15;\n    this.margin = [10, 10, 10, 10];\n  }\n\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n    const data = this.results.slice();\n\n    while (data.length < N) {\n      data.push({\n        value: null\n      });\n    }\n\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n}\n\nNumberCardComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n}();\n\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NumberCardModule {}\n\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\n\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\n\nclass TreeMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges() {\n    this.update();\n\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n\n  update() {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n\n      this.initialized = true;\n    }\n  }\n\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n    this.animateToCurrentForm();\n  }\n\n  getTextColor() {\n    return invertColor(this.fill);\n  }\n\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n\n    if (this.animations) {\n      node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    } else {\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    }\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: 0.3\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n\n}\n\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CountUpDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TreeMapCellSeriesComponent {\n  constructor() {\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n\n  ngOnChanges(changes) {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    return this.data.children.filter(d => {\n      return d.depth === 1;\n    }).map((d, index) => {\n      const label = d.id;\n      return {\n        data: d.data,\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n        fill: this.colors.getColor(label),\n        label,\n        value: d.value\n      };\n    });\n  }\n\n  getTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.label;\n  }\n\n}\n\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\n\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [TreeMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TreeMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n  }\n\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.domain = this.getDomain();\n    this.treemap = treemap().size([this.dims.width, this.dims.height]);\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n    const root = stratify().id(d => {\n      let label = d.name;\n\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n\n      return label;\n    }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n    this.data = this.treemap(root);\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n}\n\nTreeMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n}();\n\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"select\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n\nclass TreeMapModule {}\n\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\n\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\n\nvar ElementType;\n\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\n\nclass LinearGaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.margin = [10, 20, 10, 20];\n    this.valueResizeScale = 1;\n    this.unitsResizeScale = 1;\n    this.valueTextTransform = '';\n    this.valueTranslate = '';\n    this.unitsTextTransform = '';\n    this.unitsTranslate = '';\n    this.barOrientation = BarOrientation;\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText(ElementType.Value);\n      this.scaleText(ElementType.Units);\n    });\n  }\n\n  update() {\n    super.update();\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.setColors();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR('value');\n      this.scaleTextSSR('units');\n    } else {\n      setTimeout(() => this.scaleText(ElementType.Value), 50);\n      setTimeout(() => this.scaleText(ElementType.Units), 50);\n    }\n  }\n\n  getValueDomain() {\n    return [this.min, this.max];\n  }\n\n  getValueScale() {\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n  }\n\n  getDisplayValue() {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n\n    return this.value.toLocaleString();\n  }\n\n  scaleText(element, repeat = true) {\n    let el;\n    let resizeScale;\n\n    if (element === ElementType.Value) {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n\n    const {\n      width,\n      height\n    } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n    if (resizeScale !== oldScale) {\n      if (element === ElementType.Value) {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n\n      this.cd.markForCheck();\n\n      if (repeat && isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n\n  scaleTextSSR(element) {\n    let resizeScale = 1;\n    const value = element === 'value' ? this.displayValue : this.units;\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n    const height = 25;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n    if (element === 'value') {\n      this.valueResizeScale = resizeScale;\n      this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    } else {\n      this.unitsResizeScale = resizeScale;\n      this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    }\n\n    this.cd.markForCheck();\n  }\n\n  onClick() {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n  }\n\n}\n\nLinearGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n}();\n\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"click\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"valueTextEl\", \"\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"unitsTextEl\", \"\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2)(3, \"g\", 3);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 4);\n      i0.ɵɵtemplate(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 5);\n      i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 6, 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"g\")(12, \"text\", 8, 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  dependencies: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\n\nclass GaugeArcComponent {\n  constructor() {\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n\n  tooltipText(arc) {\n    const label = formatLabel(arc.data.name);\n    let val;\n\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n}\n\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\n\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template__svg_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template__svg_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template__svg_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  dependencies: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\n\nclass GaugeAxisComponent {\n  constructor() {\n    this.rotate = '';\n  }\n\n  ngOnChanges(changes) {\n    this.update();\n  }\n\n  update() {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n\n  getTicks() {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n      const textAnchor = this.getTextAnchor(angleDeg);\n      let skip = false;\n\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n\n      if (i === this.bigSegments) {\n        continue;\n      }\n\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n\n    return ticks;\n  }\n\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = TextAnchor.Middle;\n\n    if (angle > 45 && angle <= 135) {\n      textAnchor = TextAnchor.Start;\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = TextAnchor.End;\n    }\n\n    return textAnchor;\n  }\n\n  getTickPath(startDistance, tickLength, angle) {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n    const points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x2,\n      y: y2\n    }];\n    const lineGenerator = line().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n\n}\n\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\n\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0);\n      i0.ɵɵtemplate(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0);\n      i0.ɵɵtemplate(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\n\nclass GaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.min = 0;\n    this.max = 100;\n    this.bigSegments = 10;\n    this.smallSegments = 5;\n    this.showAxis = true;\n    this.startAngle = -120;\n    this.angleSpan = 240;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.showText = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.resizeScale = 1;\n    this.rotation = '';\n    this.textTransform = 'scale(1, 1)';\n    this.cornerRadius = 10;\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n\n  update() {\n    super.update();\n\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    } // make the starting angle positive\n\n\n    if (this.startAngle < 0) {\n      this.startAngle = this.startAngle % 360 + 360;\n    }\n\n    this.angleSpan = Math.min(this.angleSpan, 360);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n    this.arcs = this.getArcs();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n\n  getArcs() {\n    const arcs = [];\n    const availableRadius = this.outerRadius * 0.7;\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n    let i = 0;\n\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n      arcs.push(arc);\n      i++;\n    }\n\n    return arcs;\n  }\n\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n\n  getValueDomain() {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n\n    return [this.min, this.max];\n  }\n\n  getValueScale() {\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n  }\n\n  getDisplayValue() {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n\n    return value.toLocaleString();\n  }\n\n  scaleText(repeat = true) {\n    if (!this.showText) {\n      return;\n    }\n\n    const {\n      width\n    } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n    }\n\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n\n  onClick(data) {\n    this.select.emit(data);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, item) {\n    return item.valueArc.data.name;\n  }\n\n}\n\nGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n}();\n\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"textEl\", \"\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  dependencies: [ChartComponent, GaugeArcComponent, GaugeAxisComponent, i2.NgForOf, i2.NgIf],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\n\nclass GaugeModule {}\n\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\n\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})(); // The export is needed here to generate a valid polyfills.metadata.json file\n\n\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n\nclass NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n\n}\n\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\n\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n\n    return label.toString();\n  };\n}\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","timeFormat","throttle","func","wait","options","context","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","target","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","value","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","Top","top","Bottom","height","Center","undefined","horizontalPosition","Left","left","Right","width","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","positionContent","determinePlacement","TooltipContentComponent","constructor","element","renderer","platformId","cssClasses","clz","type","cssClass","ngAfterViewInit","position","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","ɵfac","ElementRef","Renderer2","ɵcmp","NgIf","NgTemplateOutlet","prototype","selector","template","encapsulation","None","styles","decorators","title","InjectionRegisteryService","injectionService","defaults","components","Map","getByType","create","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","length","idx","indexOf","splice","destroyAll","destroyByType","comps","i","appendComponent","inputs","outputs","has","set","types","push","isViewContainerRef","x","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","globalRootViewContainer","getRootViewContainer","_container","Error","setRootViewContainer","getComponentRootNode","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","portal","componentRef","attach","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","TooltipService","LegendPosition","LegendType","ScaleType","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","colors","domain","direction","gradient","splits","pairs","reverse","forEach","c","Math","round","join","changeDetection","OnPush","valueRange","formatLabel","label","toLocaleDateString","toLocaleString","escapeLabel","replace","match","LegendEntryComponent","isActive","activate","deactivate","toggle","trimmedLabel","formattedLabel","onMouseEnter","emit","name","onMouseLeave","color","LegendComponent","cd","labelClick","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","data","findIndex","getColor","entry","activeEntries","item","find","d","trackBy","index","ChangeDetectorRef","NgForOf","ChartComponent","showLegend","animations","legendLabelClick","legendLabelActivate","legendLabelDeactivate","legendColumns","legendType","getLegendType","legendOptions","ScaleLegend","chartColumns","chartWidth","floor","view","legendWidth","scaleType","Linear","Legend","providers","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","NgZone","ɵdir","isDate","toString","call","isNumber","BaseChartComponent","chartElement","scheme","schemeType","Ordinal","ngOnInit","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","results","cloneData","dims","getContainerDims","hostElem","parentNode","formatDates","g","series","j","resizeSubscription","source","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","customColors","Orientation","AxisLabelComponent","textHeight","margin","strokeWidth","textAnchor","transform","orient","y","offset","trimLabel","s","trim","slice","reduceTicks","ticks","maxTicks","reduced","modulus","TextAnchor","XAxisTicksComponent","tickArguments","tickStroke","trimTicks","maxTickLength","showGridLines","rotateTicks","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","updateDims","parseInt","ticksElement","scale","getTicks","tickFormatting","tickFormat","angle","getRotationAngle","adjustedScale","bandwidth","textTransform","End","tick","tickLength","tickTrim","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","tickTransform","gridLineTransform","gridLineHeight","XAxisComponent","xOrient","xAxisOffset","xAxisClassName","labelOffset","fill","stroke","padding","orientation","xAxisTickCount","emitTicksHeight","newLabelOffset","xScale","showLabel","labelText","ticksComponent","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","showRefLabels","showRefLines","referenceLineLength","getApproximateAxisWidth","sign","tickSpacing","referenceLines","setReferencelines","y2","y1","dy","x2","x1","Start","refMin","map","refMax","referenceAreaPath","gridLineWidth","tickHeight","maxChars","t","YAxisComponent","yOrient","yAxisOffset","yAxisClassName","yAxisTickCount","emitTicksWidth","yScale","AxesModule","ɵmod","ɵinj","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipDisabled","tooltipShowCaret","tooltipPlacement","tooltipAlignment","tooltipType","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","listensForFocus","focus","listensForHover","mouseover","hideTooltip","onFocus","showTooltip","onBlur","contentDom","contains","onMouseClick","immediate","time","navigator","userAgent","createBoundOptions","addHideListeners","tooltip","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipTemplate","tooltipContext","ViewContainerRef","TooltipModule","entryComponents","cache","id","newId","random","pow","BarOrientation","SvgLinearGradientComponent","Vertical","Horizontal","stops","CircleComponent","onClick","classNames","Array","isArray","cx","cy","circleOpacity","pointerEvents","SeriesType","CircleSeriesComponent","Standard","barVisible","barOrientation","placementTypes","styleTypes","isSSR","gradientId","gradientFill","circle","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","seriesName","tooltipLabel","Time","Number","d1","radius","opacity","gradientStops","getGradientStops","getTooltipText","getTooltipMinMaxText","activateCircle","deactivateCircle","GridPanelComponent","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","step","Even","paddingInner","class","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","startOpacity","AreaComponent","animationsLoaded","hasGradient","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","path","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","valueFormatting","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","group","groupName","d0","toFixed","v","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","xSet","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","getToolTipText","tooltipItem","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","legend","autoScale","AdvancedLegendComponent","legendItems","labelFormatting","percentageFormatting","percentage","defaultValueFormatting","getTotal","reduce","sum","total","roundedTotal","getLegendItems","_value","displayLabel","origialLabel","COMPONENTS","ChartCommonModule","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","valueScale","formattedValue","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","endColor","startColor","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","baseValue","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","curve","d0values","d1values","isInactive","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","trimXAxisTicks","trimYAxisTicks","rotateXAxisTicks","maxXAxisTickLength","maxYAxisTickLength","roundDomains","timelineHeight","timelinePadding","showXAxisLabel","showYAxisLabel","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","clipPath","timelineWidth","timelineXDomain","timelineXScale","timelineYScale","timelineTransform","yScaleMin","yScaleMax","nice","date","num","updateDomain","updateHoveredVertical","hoveredVertical","deactivateAll","hideCircles","opts","updateYAxisWidth","updateXAxisHeight","onActivate","entries","onDeactivate","xAxisLabel","yAxisLabel","xAxisTickFormatting","yAxisTickFormatting","xAxisTicks","yAxisTicks","seriesTooltipTemplate","AreaChartNormalizedComponent","seriesType","valueOf","AreaChartStackedComponent","AreaChartModule","BarComponent","roundEdges","noBarWhenZero","hideBar","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","ariaLabel","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","getSize","negative","formatedValue","barX","barWidth","barY","barHeight","SeriesHorizontal","showDataLabel","dataLabelWidthChanged","barsForDataLabels","updateTooltipSettings","positive","d0Type","Normalized","bars","getLabel","bar","Stacked","offset0","offset1","tooltipText","dataLabelFormatting","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","trackDataLabelBy","barLabel","click","BarHorizontalComponent","barPadding","dataLabelMaxWidth","rangeRound","onDataLabelMaxWidthChanged","size","fromLegend","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","groupScale","getGroupScale","innerScale","getInnerScale","getValueScale","paddingOuter","groupTransform","groupIndex","flat","BarHorizontalNormalizedComponent","barChartType","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","SeriesVerticalComponent","dataLabelHeightChanged","BarVerticalComponent","dataLabelMaxHeight","some","isNaN","onDataLabelMaxHeightChanged","BarVertical2DComponent","BarVerticalNormalizedComponent","BarVerticalStackedComponent","BarChartModule","cloneDeep","BoxComponent","boxStrokeWidth","whiskerStrokeWidth","medianLineWidth","updateLineEl","maskLineId","maskLine","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","v1","v2","lineTween","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","strokeColor","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","legendOptionsConfig","BoxChartModule","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","rScale","xScaleType","yScaleType","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","BubbleChartModule","HeatMapCellComponent","gradientUrl","animateToCurrentForm","HeatCellSeriesComponent","cells","getCells","row","cell","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","split","f","yVal","rx","HeatMapModule","LineComponent","initialPath","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","hasRange","getRangeGenerator","outerPath","areaGradientStops","rangeFillOpacity","LineChartComponent","LineChartModule","PieLabelComponent","labelTrim","labelTrimSize","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","test","startRadius","explodeSlices","innerArc","innerRadius","outerRadius","innerPos","centroid","pos","outerPos","midAngle","startAngle","endAngle","PolarSeriesComponent","circleRadius","linearScaleType","seriesColor","getAngle","cData","inactive","defaultTooltipText","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","yAxisDims","transformYAxis","transformPlot","xValues","getXValues","yAxisScale","thetaTicks","dd","startPos","minDistance","o","radiusTicks","getYValues","PieArcComponent","cornerRadius","dblclick","getPointerEvents","calc","calculateArc","radialGradientId","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieSeriesComponent","trimLabels","maxLabelLength","pieGenerator","arcData","calculateLabelPositions","outerArc","factor","pieData","labelPositions","labelVisible","myArc","showLabels","getTooltipTitle","AdvancedPieChartComponent","nameFormatting","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","percent","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridComponent","getSeries","baselineLabelHeight","yPos","PieChartModule","PolarChartModule","calculateTextWidth","fontFamilyKey","text","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","transformBand","paddedValue","setPadding","bandPath","scaleText","startCount","medianSize","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","bandColor","textColor","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","emptyColor","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","NumberCardComponent","clickable","observers","NumberCardModule","TreeMapCellComponent","cellData","getTextColor","TreeMapCellSeriesComponent","children","x0","TreeMapComponent","rootNode","isRoot","parentId","TreeMapModule","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","displayValue","getDisplayValue","transformLine","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","units","GaugeArcComponent","backgroundArc","valueArc","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","angleSpan","bigSegments","smallTickSegment","smallSegments","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeComponent","showAxis","showText","rotation","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","axisTickFormatting","GaugeModule","ngxChartsPolyfills","SVGElement","HTMLDivElement","NgxChartsModule","fieldType","groupByType","formatter"],"sources":["/Users/macbookpro/Documents/CODE/ANGULAR/Olympic games data charts/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? function (d) {\n                return scale(d) + scale.bandwidth() * 0.5;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":"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A,EA8jP1F,aAhFhB;MA9+O0GA,EA8jP1F,8BAhFhB;IAAA;EAAA;EAAA,eA+G+yDoS,cA/G/yD,EA+GohEgT,wBA/GphE,EA+G6pEnK,cA/G7pE,EA+Go7EgD,cA/Gp7E,EA+G+uF6Z,gBA/G/uF,EA+GsnG92B,EAAE,CAACsI,IA/GznG,EA+GusGtI,EAAE,CAACmR,OA/G1sG;EAAA;EAAA;EAAA;IAAA,WA+GszG,CAC9yG1Q,OAAO,CAAC,gBAAD,EAAmB,CACtBC,UAAU,CAAC,QAAD,EAAW,CACjBC,KAAK,CAAC;MACFgjB,OAAO,EAAE,CADP;MAEFzN,SAAS,EAAE;IAFT,CAAD,CADY,EAKjBtV,OAAO,CAAC,GAAD,EAAMD,KAAK,CAAC;MAAEgjB,OAAO,EAAE,CAAX;MAAczN,SAAS,EAAE;IAAzB,CAAD,CAAX,CALU,CAAX,CADY,CAAnB,CADuyG;EA/GtzG;EAAA;AAAA;;AA0HA;EAAA,mDAxmP0GlX,EAwmP1G,mBAA2F85B,wBAA3F,EAAiI,CAAC;IACtH3xB,IAAI,EAAEjI,SADgH;IAEtH2D,IAAI,EAAE,CAAC;MAAE4F,QAAQ,EAAE,8BAAZ;MAA4CC,QAAQ,EAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module"}